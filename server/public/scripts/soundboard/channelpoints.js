const defaultSounds = [
  { name: "Ba Dum Tss", url: "/sounds/ba-dum-tss.mp3" },
  { name: "Applause", url: "/sounds/applause.mp3" },
  { name: "Lucio Boop", url: "/sounds/boop-lucio.mp3" },
  { name: "Sombra Boop", url: "/sounds/boop-sombra.mp3" },
  { name: "Chicken Jockey", url: "/sounds/chicken-jockey.mp3" },
  { name: "Flint and Steel", url: "/sounds/flint-and-steel.mp3" },
  { name: "I... am Steve", url: "/sounds/i-am-steve.mp3" },
  { name: "Illuminati", url: "/sounds/illuminati.mp3" },
  { name: "Taco Bell", url: "/sounds/taco-bell.mp3" },
  { name: "The Nether", url: "/sounds/the-nether.mp3" },
  { name: "Vine Boom", url: "/sounds/vine-boom.mp3" },
];

let soundlist = [
  ...JSON.parse(localStorage.getItem("soundboardSounds") || "[]"),
  ...defaultSounds,
];

fetch("/api/sounds")
  .then((res) => res.json())
  .then((data) => {
    soundlist = data.map((url) => {
      const existing = soundlist.find((s) => s.url === url);
      if (existing) return existing;
      const name = url
        .split("/")
        .pop()
        .replace(/\.[^/.]+$/, "");
      return { name, url };
    });
  })
  .then(() => {
    soundlist = soundlist.sort((a, b) => a.url.localeCompare(b.url));
    const soundDropdown = document.getElementById("soundSelect");
    soundlist.forEach((sound, index) => {
      const option = document.createElement("option");
      option.value = index;
      option.textContent = sound.url;
      soundDropdown.appendChild(option);
    });
  });

fetch("/api/rewards")
  .then((res) => res.json())
  .then((data) => {
    data.forEach((reward) => {
      const tr = document.createElement("tr");
      const toggleTd = document.createElement("td");
      const toggle = document.createElement("input");
      toggle.type = "checkbox";
      toggle.checked = reward.isEnabled;
      toggle.className = "toggle toggle-primary";
      toggle.addEventListener("change", () => {
        fetch(`/api/rewards/${encodeURIComponent(reward.id)}/toggle`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ isEnabled: toggle.checked }),
        });
      });
      toggleTd.appendChild(toggle);
      tr.appendChild(toggleTd);

      const nameTd = document.createElement("td");
      nameTd.textContent = reward.title;
      tr.appendChild(nameTd);

      const costTd = document.createElement("td");
      costTd.textContent = reward.cost;
      tr.appendChild(costTd);

      const descriptionTd = document.createElement("td");
      descriptionTd.textContent = reward.prompt;
      tr.appendChild(descriptionTd);

      const cooldownTd = document.createElement("td");
      cooldownTd.textContent = reward.globalCooldown ?? 0;
      tr.appendChild(cooldownTd);

      const soundTd = document.createElement("td");
      soundTd.textContent = reward.sound;
      tr.appendChild(soundTd);

      const actionsTd = document.createElement("td");
      const editBtn = document.createElement("button");
      editBtn.className = "btn btn-sm btn-secondary mr-2";
      editBtn.textContent = "Edit";
      editBtn.addEventListener("click", () => {
        document.getElementById("rewardName").value = reward.title;
        document.getElementById("rewardName").disabled = true;
        document.getElementById("rewardDescription").value =
          reward.prompt || "Redeem to trigger a sound | Generated by Manao";
        document.getElementById("rewardCost").value = reward.cost;
        document.getElementById("rewardCooldown").value =
          reward.globalCooldown || 0;
        const soundIndex = soundlist.findIndex((s) => s.url === reward.sound);
        document.getElementById("soundSelect").value =
          soundIndex !== -1 ? soundIndex : 0;
        document.getElementById("saveReward").textContent = "Update Reward";
        rewardsDialog.showModal();
      });
      const deleteBtn = document.createElement("button");
      deleteBtn.className = "btn btn-sm btn-error";
      deleteBtn.textContent = "Delete";
      deleteBtn.addEventListener("click", () => {
        if (!confirm("Are you sure you want to delete this reward?")) return;
        fetch(`/api/rewards/${encodeURIComponent(reward.id)}`, {
          method: "DELETE",
        }).then((res) => {
          if (res.ok) {
            alert("Reward deleted successfully!");
            tr.remove();
          } else {
            res.text().then((text) => alert(`Error: ${text}`));
          }
        });
      });
      actionsTd.appendChild(editBtn);
      actionsTd.appendChild(deleteBtn);
      tr.appendChild(actionsTd);
      document.getElementById("points-list").appendChild(tr);
    });
  });

const addRewardButton = document.getElementById("addReward");
addRewardButton.addEventListener("click", () => {
  document.getElementById("rewardName").disabled = false;
  document.getElementById("rewardsForm").reset();
});

const saveRewardButton = document.getElementById("saveReward");
saveRewardButton.addEventListener("click", saveReward);

function saveReward() {
  const name = document.getElementById("rewardName")?.value.trim();
  const description =
    document.getElementById("rewardDescription")?.value.trim() ||
    "Redeem to trigger a sound | Generated by Manao";
  const cost = parseInt(
    document.getElementById("rewardCost")?.value.trim(),
    10,
  );
  const cooldown = parseInt(
    document.getElementById("rewardCooldown")?.value.trim(),
    10,
  );
  const sound =
    soundlist[parseInt(document.getElementById("soundSelect").value, 10)]?.url;

  fetch("/api/rewards", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ name, cost, cooldown, sound, description }),
  }).then((res) => {
    if (res.ok) {
      alert("Reward saved successfully!");
      window.location.reload();
    } else {
      res.text().then((text) => alert(`Error: ${text}`));
    }
  });
}
